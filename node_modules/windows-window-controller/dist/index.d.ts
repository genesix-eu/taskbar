import * as Win from 'win32-api';
import { types as GT } from 'win32-api';
import * as Config from './lib/types';
export { Win };
export { Config };
export { ExecRet } from './lib/types';
export { validate_cmdshow } from './lib/user32';
export declare function hide(options: Config.Opts): Promise<Config.ExecRet>;
export declare function show(options: Config.Opts): Promise<Config.ExecRet>;
/**
 * retrieve hWnds by matchValue matched by pid|title
 */
export declare function get_hwnds(opts: Config.Opts): Promise<GT.HWND[] | void>;
export declare function kill(opts: Config.Opts): Promise<Config.ExecRet>;
export declare function retrieve_pointer_by_hwnd(hwnd: Config.Hwnd): Promise<void | GT.HWND>;
export declare function parse_cli_opts(argv: Config.CliOpts): void | Config.Opts;
export declare function set_title(title: string, opts: Config.Opts): Promise<Config.ExecRet>;
export default show;
