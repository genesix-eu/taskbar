import { types as GT } from 'win32-api';
export declare type Tno = number;
export declare type Hwnd = number;
export declare type matchParam = number | string;
export declare type matchType = 'pid' | 'title' | 'hwnd' | null;
export interface Task {
    readonly tno: Tno;
    hwndSet: Set<GT.HWND>;
    pidSet: Set<GT.PID>;
    matchType: matchType;
    matchValue: matchParam;
    errMsg: string;
}
export declare type ErrCode = number;
export interface ExecRet {
    err: ErrCode;
    msg: string;
    pids: GT.PID[];
    hwnds: Hwnd[];
}
export interface FilterWinRules {
    titleExits?: boolean | null;
    includeStyle?: number | null;
    excludeStyle?: number | null;
    includeExStyle?: number | null;
    excludeExStyle?: number | null;
}
export declare const filterWinRulesDefaults: {
    titleExits: null;
    includeStyle: null;
    excludeStyle: null;
    includeExStyle: null;
    excludeExStyle: null;
};
export declare const showFilterRulesDefaults: {
    titleExits: boolean;
    includeStyle: number;
    excludeStyle: number;
    includeExStyle: null;
    excludeExStyle: number;
};
export interface CliOpts {
    title?: string;
    pid?: matchParam;
    hwnd?: matchParam;
    status?: matchParam;
    [prop: string]: any;
}
export interface Opts extends FilterWinRules {
    matchType: matchType;
    matchValue: matchParam;
    nCmdShow?: number;
}
